@page "/todocommentlist/edit/{Id:int?}"
@inject HttpClient httpClient
@inject NavigationManager navigationManager

<h3>TodoCommentEdit</h3>

@if (isLoading)
{
    <p>Loading ...</p>
}
else
{
    <EditForm Model="todoComment" OnValidSubmit="OnSave">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="row">
            <div class="col-md-12">
                <label class="form-label">Text</label>
                <InputTextArea class="form-control" @bind-Value="@todoComment.Text" />
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <label class="form-label">Todo</label>
                <InputSelect class="form-control" @bind-Value="todoComment.TodoId">
                    @foreach(var item in todoComment.Todos)
                    {
                        <option value="@item.Id">@item.Title</option>
                    }
                </InputSelect>
            </div>
        </div>

        <div class="row mt-2">
            <div class="col">
                <BootstrapButton ButtonType="BootstrapButtonType.Success" IsSubmit="true">Save</BootstrapButton>
                @*<button class="btn btn-success" type="submit">Save</button>*@
                <button class="btn btn-danger" @onclick="OnCancel">Cancel</button>
            </div>
        </div>
    </EditForm>
}

@code {
    [Parameter] public int? Id { get; set; }
    bool isLoading = true;
    TodoCommentEditDto todoComment;

    protected override async Task OnInitializedAsync()
    {
        if(Id == null)
        {
            todoComment = new();
            todoComment.Todos = await httpClient.GetFromJsonAsync<List<TodoListDto>>("todo");
            todoComment.TodoId = todoComment.Todos.FirstOrDefault()?.Id;
        }
        else
        {
            todoComment = await httpClient.GetFromJsonAsync<TodoCommentEditDto>($"todocomment/{Id}");
        }

        isLoading = false;
    }

    private void OnCancel()
    {
        navigationManager.NavigateTo("todocommentlist");
    }

    private async Task OnSave()
    {
        HttpResponseMessage? response;
        if(Id == null)
        {
            //CREATE
            response = await httpClient.PostAsJsonAsync("todocomment", todoComment);
        }
        else
        {
            response = await httpClient.PutAsJsonAsync("todocomment", todoComment);
        }
        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("todocommentlist");
    }
}
